{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ConfigRewardGenStatsMsg",
  "type": "object",
  "required": [
    "accepted_ibc_denominations",
    "contract_enabled",
    "contract_owner",
    "general_stats",
    "marketplace_listing_fee_denom",
    "marketplace_listing_fee_value",
    "marketplace_pct_fees",
    "oracle_contract_address",
    "reward_system"
  ],
  "properties": {
    "accepted_ibc_denominations": {
      "$ref": "#/definitions/AcceptedDenominations"
    },
    "contract_enabled": {
      "type": "boolean"
    },
    "contract_owner": {
      "type": "string"
    },
    "general_stats": {
      "$ref": "#/definitions/GeneralStats"
    },
    "marketplace_listing_fee_denom": {
      "type": "string"
    },
    "marketplace_listing_fee_value": {
      "$ref": "#/definitions/Uint128"
    },
    "marketplace_pct_fees": {
      "$ref": "#/definitions/Decimal"
    },
    "oracle_contract_address": {
      "type": "string"
    },
    "reward_system": {
      "$ref": "#/definitions/RewardSystem"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AcceptedDenominations": {
      "type": "object",
      "required": [
        "list_of_denoms"
      ],
      "properties": {
        "list_of_denoms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "CollectionVolume": {
      "type": "object",
      "required": [
        "nft_collection_address",
        "usdc_volume"
      ],
      "properties": {
        "nft_collection_address": {
          "type": "string"
        },
        "usdc_volume": {
          "$ref": "#/definitions/Uint128"
        }
      },
      "additionalProperties": false
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "GeneralStats": {
      "type": "object",
      "required": [
        "last_collection_added",
        "last_collections_traded",
        "lowest_volume_usdc",
        "top_10_volume_usdc"
      ],
      "properties": {
        "last_collection_added": {
          "type": "string"
        },
        "last_collections_traded": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lowest_volume_usdc": {
          "$ref": "#/definitions/Uint128"
        },
        "top_10_volume_usdc": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CollectionVolume"
          }
        }
      },
      "additionalProperties": false
    },
    "RewardSystem": {
      "type": "object",
      "required": [
        "reward_token_address",
        "reward_token_per_1usdc_volume",
        "total_reward_tokens_distributed",
        "vip_perks"
      ],
      "properties": {
        "reward_token_address": {
          "type": "string"
        },
        "reward_token_per_1usdc_volume": {
          "$ref": "#/definitions/Uint128"
        },
        "total_reward_tokens_distributed": {
          "$ref": "#/definitions/Uint128"
        },
        "vip_perks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VipPerk"
          }
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VipLevel": {
      "type": "string",
      "enum": [
        "level0",
        "level1",
        "level2",
        "level3"
      ]
    },
    "VipPerk": {
      "type": "object",
      "required": [
        "marketplace_fees_discount",
        "price_in_reward_tokens",
        "profile_background",
        "profile_description",
        "profile_links",
        "profile_nft_showcase",
        "vip_level"
      ],
      "properties": {
        "marketplace_fees_discount": {
          "$ref": "#/definitions/Decimal"
        },
        "price_in_reward_tokens": {
          "$ref": "#/definitions/Uint128"
        },
        "profile_background": {
          "type": "boolean"
        },
        "profile_description": {
          "type": "boolean"
        },
        "profile_links": {
          "type": "boolean"
        },
        "profile_nft_showcase": {
          "type": "boolean"
        },
        "vip_level": {
          "$ref": "#/definitions/VipLevel"
        }
      },
      "additionalProperties": false
    }
  }
}
